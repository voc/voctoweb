services:
  voctoweb:
    build: .
    command: dumb-init bundle exec rails s -p 3000 -b '0.0.0.0'
    volumes:
      - ".:/voctoweb"
      - "./docker/database.yml:/voctoweb/config/database.yml"
      - "./docker/settings.yml:/voctoweb/config/settings.yml"
    ports:
      - "3000:3000"
    environment:
      - ELASTICSEARCH_URL=elasticsearch
      - REDIS_URL=redis://redis:6379/1
      - DEV_DOMAIN=${DEV_DOMAIN}
    depends_on:
      - sidekiq
      - postgres
      - elasticsearch
      - redis
  sidekiq:
    build: .
    command: dumb-init bundle exec sidekiq
    volumes:
      - ".:/voctoweb"
      - "./docker/database.yml:/voctoweb/config/database.yml"
      - "./docker/settings.yml:/voctoweb/config/settings.yml"
    environment:
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      - postgres
      - redis
  postgres:
    image: postgres:12-alpine
    volumes:
      - "./docker/db:/var/lib/postgresql/data"
    environment:
      - POSTGRES_PASSWORD=postgres
    # added to use postgres from host system to run tests, needs a user to match config/database.yml:
    #  echo "create role voctoweb2 with createdb superuser login password 'voctoweb';" | sudo -u postgres psql -hlocalhos
    ports:
      - "5432:5432"
  elasticsearch:
    image: elasticsearch:6.8.6
    platform: linux/amd64
    ports:
      - "9200:9200"
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.enabled=true
      - http.cors.allow-origin=*
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
#      - esdata:/usr/share/elasticsearch/data
      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  # kibana:
  #   image: 'docker.elastic.co/kibana/kibana:6.8.6'
  #   container_name: kibana
  #   environment:
  #     SERVER_NAME: kibana.local
  #     ELASTICSEARCH_URL: http://elasticsearch:9200
  #   ports:
  #     - '5601:5601'
  #   depends_on:
  #     - elasticsearch
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
  ssh-server:
      image: panubo/sshd
      volumes:
        - ".:/voctoweb"
        - "./docker/ssh:/root/.ssh"
      ports:
        - "2202:22"
  nginx:
    image: nginx:stable-alpine
    volumes:
      - "./docker/nginx.conf:/etc/nginx/conf.d/default.conf"
      - "./docker/content:/usr/share/nginx/html:ro"
    environment:
      - NGINX_HOST=${DEV_DOMAIN}
    ports:
      - "80:80"
    depends_on:
      - voctoweb
